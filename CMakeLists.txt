CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

#SET(CMAKE_DISABLE_SOURCE_CHANGES ON)
SET(CMAKE_DISABLE_IN_SOURCE_BUILD ON)
#SET(CMAKE_SUPPRESS_REGENERATION TRUE)

PROJECT (transporter)

SET(TRANSPORTER_LIB_VERSION "1.0.2")
SET(TRANSPORTER_LIB_SOVERSION "1")

EXEC_PROGRAM("git" ${CMAKE_CURRENT_SOURCE_DIR} ARGS "describe" OUTPUT_VARIABLE GIT_DESCRIBE_VERSION)

STRING( REGEX REPLACE ".*([0-9]+)\\.([0-9]+)\\.([0-9]+)\\-([0-9]+)-.*" "\\1" VERSION_MAJOR ${GIT_DESCRIBE_VERSION} )
STRING( REGEX REPLACE ".*([0-9]+)\\.([0-9]+)\\.([0-9]+)\\-([0-9]+)-.*" "\\2" VERSION_MINOR ${GIT_DESCRIBE_VERSION} )
STRING( REGEX REPLACE ".*([0-9]+)\\.([0-9]+)\\.([0-9]+)\\-([0-9]+)-.*" "\\3" VERSION_PATCH ${GIT_DESCRIBE_VERSION} )
STRING( REGEX REPLACE ".*([0-9]+)\\.([0-9]+)\\.([0-9]+)\\-([0-9]+)-.*" "\\4" VERSION_COMMIT ${GIT_DESCRIBE_VERSION} )

SET (CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/../build/cmakefind)

FIND_PACKAGE(Ace REQUIRED)
FIND_PACKAGE(Boost REQUIRED)

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/..)
LINK_DIRECTORIES(${LINK_DIRECTORIES})

SET (TRANSPORTER_LIBRARY
    smtpsend.cpp
    )

SET(LIBRARY_OUTPUT_PATH ${LINK_DIRECTORIES})

ADD_LIBRARY(transporter SHARED ${TRANSPORTER_LIBRARY})
TARGET_LINK_LIBRARIES(transporter ACE)

SET_TARGET_PROPERTIES(transporter PROPERTIES VERSION ${TRANSPORTER_LIB_VERSION} SOVERSION ${TRANSPORTER_LIB_SOVERSION})

set(CPACK_COMPONENTS_ALL applications libraries headers)

FILE(GLOB files "${CMAKE_CURRENT_SOURCE_DIR}/*.hpp")

INSTALL(FILES ${files} DESTINATION include/${PROJECT_NAME}  COMPONENT headers)

INSTALL(TARGETS ${PROJECT_NAME} LIBRARY DESTINATION lib COMPONENT libraries)

SET(CPACK_PACKAGE_VERSION ${TRANSPORTER_LIB_VERSION})
SET(CPACK_SYSTEM_NAME ${CMAKE_SYSTEM_PROCESSOR})

SET(CPACK_PACKAGE_NAME "libtransporter")

SET(CPACK_GENERATOR "DEB")
SET(CPACK_DEBIAN_PACKAGE_MAINTAINER "Andrew Selivanov")
#SET(CPACK_DEBIAN_PACKAGE_DEPENDS "bk (>= 1.2.0)")

MESSAGE( STATUS "SILENTSETUP: " ${SILENTSETUP} )

IF(${SILENTSETUP})
    SET(CPACK_PACKAGE_VERSION "${TRANSPORTER_LIB_VERSION}+git${VERSION_COMMIT}~nosetup")
ELSE()
    SET(CPACK_DEBIAN_PACKAGE_CONTROL_EXTRA "${CMAKE_BINARY_DIR}/preinst;${CMAKE_BINARY_DIR}/postinst;")
    SET(CPACK_PACKAGE_VERSION "${TRANSPORTER_LIB_VERSION}+git${VERSION_COMMIT}")
ENDIF()

# This must always be last!
include(CPack)
